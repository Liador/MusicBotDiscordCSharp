<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YoutubeExplode</name>
    </assembly>
    <members>
        <member name="T:YoutubeExplode.Exceptions.ParseException">
            <summary>
            Thrown when there was an error parsing a response from Youtube's frontend
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.ParseException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Exceptions.VideoNotAvailableException">
            <summary>
            Thrown when Youtube's frontend returns an error when getting video info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Exceptions.VideoNotAvailableException.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:YoutubeExplode.Exceptions.VideoNotAvailableException.Reason">
            <summary>
            Error reason
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.VideoNotAvailableException.#ctor(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Exceptions.VideoRequiresPurchaseException">
            <summary>
            Thrown when the video is a paid Youtube Red video since then we have no access to more video details
            </summary>
        </member>
        <member name="M:YoutubeExplode.Exceptions.VideoRequiresPurchaseException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Internal.CipherOperations.ICipherOperation.Decipher(System.String)">
            <summary>
            Deciphers the given string
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.ChannelInfo">
            <summary>
            Channel info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ChannelInfo.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ChannelInfo.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ChannelInfo.Name">
            <summary>
            Actual username
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ChannelInfo.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ChannelInfo.IsPaid">
            <summary>
            Whether this channel is paid
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ChannelInfo.LogoUrl">
            <summary>
            Logo image URL
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ChannelInfo.BannerUrl">
            <summary>
            Banner image URL
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.ChannelInfo.#ctor(System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.ClosedCaptions.ClosedCaption">
            <summary>
            Closed caption
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.ClosedCaption.Text">
            <summary>
            Text displayed by this caption
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.ClosedCaption.Offset">
            <summary>
            When the caption is shown, relative to video's timeline
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.ClosedCaption.Duration">
            <summary>
            Duration of this caption
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.ClosedCaptions.ClosedCaption.#ctor(System.String,System.TimeSpan,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrack">
            <summary>
            Closed caption track
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrack.Info">
            <summary>
            Metadata associated with this caption track
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrack.Captions">
            <summary>
            Closed captions contained inside this track
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrack.#ctor(YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo,System.Collections.Generic.IEnumerable{YoutubeExplode.Models.ClosedCaptions.ClosedCaption})">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrack.GetByTime(System.TimeSpan)">
            <summary>
            Gets the caption displayed at the given point in time, relative to video's timeline
            </summary>
            <returns><see cref="T:YoutubeExplode.Models.ClosedCaptions.ClosedCaption"/> or null if there's no caption shown at given offset</returns>
        </member>
        <member name="T:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo">
            <summary>
            Closed caption track info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo.Url">
            <summary>
            Manifest URL
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo.Language">
            <summary>
            Text culture
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo.IsAutoGenerated">
            <summary>
            Whether this caption track was generated automatically
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo.#ctor(System.String,YoutubeExplode.Models.ClosedCaptions.Language,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.ClosedCaptions.Language">
            <summary>
            Language information
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.Language.Code">
            <summary>
            The ISO 639-1 Code of that language
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.ClosedCaptions.Language.Name">
            <summary>
            The full english name of that language
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.ClosedCaptions.Language.#ctor(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.Extensions">
            <summary>
            Model extensions
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.Extensions.GetFileExtension(YoutubeExplode.Models.MediaStreams.Container)">
            <summary>
            Get file extension based on container type
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.AudioEncoding">
            <summary>
            Audio stream encoding
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.AudioEncoding.Mp3">
            <summary>
            MPEG-2 Audio Layer III
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.AudioEncoding.Aac">
            <summary>
            Advanced Audio Coding
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.AudioEncoding.Vorbis">
            <summary>
            Vorbis
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.AudioEncoding.Opus">
            <summary>
            Opus
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.AudioStreamInfo">
            <summary>
            Audio stream info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.AudioStreamInfo.Bitrate">
            <summary>
            Bitrate (bit/s)
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.AudioStreamInfo.AudioEncoding">
            <summary>
            Audio encoding
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.AudioStreamInfo.#ctor(System.Int32,System.String,System.Int64,System.Int64)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.Container">
            <summary>
            Media stream container type
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.Container.Mp4">
            <summary>
            MPEG-4 Part 14 (.mp4)
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.Container.M4A">
            <summary>
            MPEG-4 Part 14 audio-only (.m4a)
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.Container.WebM">
            <summary>
            Web Media (.webm)
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.Container.Tgpp">
            <summary>
            3rd Generation Partnership Project (.3gpp)
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.Container.Flv">
            <summary>
            Flash Video (.flv)
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.MediaStream">
            <summary>
            Media stream
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStream.Info">
            <summary>
            Metadata associated with this media stream
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStream.CanRead">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStream.CanSeek">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStream.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStream.Length">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStream.Position">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStream.#ctor(YoutubeExplode.Models.MediaStreams.MediaStreamInfo,System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStream.Finalize">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStream.Flush">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStream.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStream.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.MediaStreamInfo">
            <summary>
            Base media stream info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.Itag">
            <summary>
            Unique tag that identifies the properties of the stream
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.Url">
            <summary>
            Media stream URL
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.Container">
            <summary>
            Container type
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.ContentLength">
            <summary>
            Stream content size (bytes)
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.#ctor(System.Int32,System.String,System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.GetContainer(System.Int32)">
            <summary>
            Get container type for the given itag
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.GetAudioEncoding(System.Int32)">
            <summary>
            Get encoding for the given itag
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.GetVideoEncoding(System.Int32)">
            <summary>
            Get encoding for the given itag
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.GetVideoQuality(System.Int32)">
            <summary>
            Get video quality for the given itag
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.GetVideoQualityLabel(YoutubeExplode.Models.MediaStreams.VideoQuality,System.Double)">
            <summary>
            Compose video quality label from video quality and framerate
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MediaStreamInfo.IsKnown(System.Int32)">
            <summary>
            Check if the given itag is known
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.MixedStreamInfo">
            <summary>
            Mixed (video and audio) stream info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MixedStreamInfo.AudioEncoding">
            <summary>
            Audio encoding
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MixedStreamInfo.VideoEncoding">
            <summary>
            Video encoding
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MixedStreamInfo.VideoQuality">
            <summary>
            Video quality
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.MixedStreamInfo.VideoQualityLabel">
            <summary>
            Video quality label as seen on Youtube
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.MixedStreamInfo.#ctor(System.Int32,System.String,System.Int64)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.VideoEncoding">
            <summary>
            Video stream encoding
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoEncoding.Mp4V">
            <summary>
            MPEG-4 Visual
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoEncoding.H263">
            <summary>
            MPEG-4 Part 10, Advanced Video Coding
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoEncoding.H264">
            <summary>
            MPEG-4 Part 10, Advanced Video Coding
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoEncoding.Vp8">
            <summary>
            VP8
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoEncoding.Vp9">
            <summary>
            VP9
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.VideoQuality">
            <summary>
            Video stream quality
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.Low144">
            <summary>
            144p low-quality video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.Low240">
            <summary>
            240p low-quality video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.Medium360">
            <summary>
            360p medium-quality video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.Medium480">
            <summary>
            480p medium-quality video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.High720">
            <summary>
            720p HD video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.High1080">
            <summary>
            1080p HD video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.High1440">
            <summary>
            1440p HD video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.High2160">
            <summary>
            2160p HD video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.High3072">
            <summary>
            3072p HD video stream
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.MediaStreams.VideoQuality.High4320">
            <summary>
            4320p HD video stream
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.VideoResolution">
            <summary>
            Width and height of a video stream
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.VideoResolution.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.VideoResolution.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.VideoResolution.#ctor(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.VideoResolution.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.VideoResolution.Equals(YoutubeExplode.Models.MediaStreams.VideoResolution)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.VideoResolution.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.VideoResolution.ToString">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.VideoResolution.op_Equality(YoutubeExplode.Models.MediaStreams.VideoResolution,YoutubeExplode.Models.MediaStreams.VideoResolution)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.VideoResolution.op_Inequality(YoutubeExplode.Models.MediaStreams.VideoResolution,YoutubeExplode.Models.MediaStreams.VideoResolution)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.MediaStreams.VideoStreamInfo">
            <summary>
            Video stream info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.VideoStreamInfo.Bitrate">
            <summary>
            Video bitrate (bits/s)
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.VideoStreamInfo.VideoEncoding">
            <summary>
            Video encoding
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.VideoStreamInfo.VideoQuality">
            <summary>
            Video quality
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.VideoStreamInfo.VideoResolution">
            <summary>
            Video resoution
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.VideoStreamInfo.VideoFramerate">
            <summary>
            Video framerate (fps)
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.MediaStreams.VideoStreamInfo.VideoQualityLabel">
            <summary>
            Video quality label as seen on Youtube
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.MediaStreams.VideoStreamInfo.#ctor(System.Int32,System.String,System.Int64,System.Int64,YoutubeExplode.Models.MediaStreams.VideoResolution,System.Double)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.PlaylistInfo">
            <summary>
            Playlist info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.PlaylistInfo.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.PlaylistInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.PlaylistInfo.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.PlaylistInfo.Author">
            <summary>
            Author's display name
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.PlaylistInfo.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.PlaylistInfo.ViewCount">
            <summary>
            View count
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.PlaylistInfo.Videos">
            <summary>
            Videos in the playlist
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.PlaylistInfo.#ctor(System.String,System.String,System.String,System.String,System.Int64,System.Collections.Generic.IEnumerable{YoutubeExplode.Models.VideoInfoSnippet})">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Models.PlaylistInfo.GetPlaylistType(System.String)">
            <summary>
            Get playlist type from playlist id
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.PlaylistType">
            <summary>
            Playlist type
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.PlaylistType.UserMade">
            <summary>
            Regular playlist created by a user
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.PlaylistType.VideoMix">
            <summary>
            Mix playlist generated to group similar videos
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.PlaylistType.ChannelMix">
            <summary>
            Mix playlist generated to group similar videos uploaded by the same channel
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.PlaylistType.ChannelUploads">
            <summary>
            Playlist generated from channel uploads
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.PlaylistType.ChannelPopular">
            <summary>
            Playlist generated from popular channel uploads
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.PlaylistType.Liked">
            <summary>
            System playlist for videos liked by a user
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.PlaylistType.Favorites">
            <summary>
            System playlist for videos favorited by a user
            </summary>
        </member>
        <member name="F:YoutubeExplode.Models.PlaylistType.WatchLater">
            <summary>
            System playlist for videos user added to watch later
            </summary>
        </member>
        <member name="T:YoutubeExplode.Models.VideoInfo">
            <summary>
            Video info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.Author">
            <summary>
            Author
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.Duration">
            <summary>
            Duration
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.Watermarks">
            <summary>
            Collection of watermark URLs
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.IsListed">
            <summary>
            Whether this video is publicly listed
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.IsRatingAllowed">
            <summary>
            Whether liking/disliking this video is allowed
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.IsMuted">
            <summary>
            Whether the audio track has been muted
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.IsEmbeddingAllowed">
            <summary>
            Whether embedding this video on other websites is allowed
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.MixedStreams">
            <summary>
            Mixed streams available for this video
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.AudioStreams">
            <summary>
            Audio-only streams available for this video
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.VideoStreams">
            <summary>
            Video-only streams available for this video
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfo.ClosedCaptionTracks">
            <summary>
            Closed caption tracks available for this video
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.VideoInfo.#ctor(System.String,System.String,YoutubeExplode.Models.ChannelInfo,System.TimeSpan,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int64,System.Int64,System.Int64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{YoutubeExplode.Models.MediaStreams.MixedStreamInfo},System.Collections.Generic.IEnumerable{YoutubeExplode.Models.MediaStreams.AudioStreamInfo},System.Collections.Generic.IEnumerable{YoutubeExplode.Models.MediaStreams.VideoStreamInfo},System.Collections.Generic.IEnumerable{YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo})">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Models.VideoInfoSnippet">
            <summary>
            Partial video info
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.Keywords">
            <summary>
            Search keywords
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.ImageThumbnailUrl">
            <summary>
            Thumbnail image URL
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.ImageMediumResUrl">
            <summary>
            Medium resolution image URL
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.ImageHighResUrl">
            <summary>
            High resolution image URL
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.ImageStandardResUrl">
            <summary>
            Standard resolution image URL.
            Not always available.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.ImageMaxResUrl">
            <summary>
            Highest resolution image URL.
            Not always available.
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.ViewCount">
            <summary>
            View count
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.LikeCount">
            <summary>
            Like count
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.DislikeCount">
            <summary>
            Dislike count
            </summary>
        </member>
        <member name="P:YoutubeExplode.Models.VideoInfoSnippet.AverageRating">
            <summary>
            Average user rating in stars (1* to 5*)
            </summary>
        </member>
        <member name="M:YoutubeExplode.Models.VideoInfoSnippet.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int64,System.Int64,System.Int64)">
            <inheritdoc />
        </member>
        <member name="T:YoutubeExplode.Services.Extensions">
            <summary>
            Service extensions
            </summary>
        </member>
        <member name="M:YoutubeExplode.Services.Extensions.GetStringAsync(YoutubeExplode.Services.IHttpService,System.String)">
            <summary>
            Send a GET request and return content as a string
            </summary>
        </member>
        <member name="M:YoutubeExplode.Services.Extensions.GetStreamAsync(YoutubeExplode.Services.IHttpService,System.String)">
            <summary>
            Send a GET request and return content as a stream
            </summary>
        </member>
        <member name="T:YoutubeExplode.Services.HttpService">
            <summary>
            Simple HTTP service that uses <see cref="T:System.Net.Http.HttpClient"/> for handling requests
            </summary>
        </member>
        <member name="M:YoutubeExplode.Services.HttpService.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Creates an instance of <see cref="T:YoutubeExplode.Services.HttpService"/> with a custom <see cref="T:System.Net.Http.HttpClient"/>
            </summary>
        </member>
        <member name="M:YoutubeExplode.Services.HttpService.#ctor">
            <summary>
            Creates an instance of <see cref="T:YoutubeExplode.Services.HttpService"/>
            </summary>
        </member>
        <member name="M:YoutubeExplode.Services.HttpService.Finalize">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Services.HttpService.PerformRequestAsync(System.Net.Http.HttpRequestMessage)">
            <inheritdoc />
        </member>
        <member name="M:YoutubeExplode.Services.HttpService.Dispose(System.Boolean)">
            <summary>
            Dispose method
            </summary>
        </member>
        <member name="M:YoutubeExplode.Services.HttpService.Dispose">
            <inheritdoc />
        </member>
        <member name="P:YoutubeExplode.Services.HttpService.Instance">
            <summary>
            Returns a reusable instance of HttpService
            </summary>
        </member>
        <member name="T:YoutubeExplode.Services.IHttpService">
            <summary>
            Performs HTTP requests
            </summary>
        </member>
        <member name="M:YoutubeExplode.Services.IHttpService.PerformRequestAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Performs a generic HTTP request
            </summary>
        </member>
        <member name="T:YoutubeExplode.YoutubeClient">
            <summary>
            YoutubeClient
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.#ctor(YoutubeExplode.Services.IHttpService)">
            <summary>
            Creates an instance of <see cref="T:YoutubeExplode.YoutubeClient"/> with custom services
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.#ctor">
            <summary>
            Creates an instance of <see cref="T:YoutubeExplode.YoutubeClient"/> with default services
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.CheckVideoExistsAsync(System.String)">
            <summary>
            Checks whether a video with the given ID exists
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.GetVideoInfoAsync(System.String)">
            <summary>
            Gets video info by ID
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.GetPlaylistInfoAsync(System.String,System.Int32)">
            <summary>
            Gets playlist info by ID, truncating resulting video list at given number of pages (1 page ≤ 200 videos)
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.GetPlaylistInfoAsync(System.String)">
            <summary>
            Gets playlist info by ID
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.GetChannelUploadsAsync(System.String,System.Int32)">
            <summary>
            Gets videos uploaded to a channel with given ID, truncating resulting video list at given number of pages (1 page ≤ 200 videos)
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.GetChannelUploadsAsync(System.String)">
            <summary>
            Gets videos uploaded to a channel with given ID
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.GetChannelInfoAsync(System.String)">
            <summary>
            Gets channel info by ID
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.GetMediaStreamAsync(YoutubeExplode.Models.MediaStreams.MediaStreamInfo)">
            <summary>
            Gets the actual media stream represented by given metadata
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.GetClosedCaptionTrackAsync(YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo)">
            <summary>
            Gets the actual closed caption track represented by given metadata
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.DownloadMediaStreamAsync(YoutubeExplode.Models.MediaStreams.MediaStreamInfo,System.String,System.IProgress{System.Double},System.Threading.CancellationToken,System.Int32)">
            <summary>
            Downloads a media stream to file
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.DownloadMediaStreamAsync(YoutubeExplode.Models.MediaStreams.MediaStreamInfo,System.String,System.IProgress{System.Double},System.Threading.CancellationToken)">
            <summary>
            Downloads a media stream to file
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.DownloadMediaStreamAsync(YoutubeExplode.Models.MediaStreams.MediaStreamInfo,System.String,System.IProgress{System.Double})">
            <summary>
            Downloads a media stream to file
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.DownloadMediaStreamAsync(YoutubeExplode.Models.MediaStreams.MediaStreamInfo,System.String)">
            <summary>
            Downloads a media stream to file
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.DownloadClosedCaptionTrackAsync(YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo,System.String,System.IProgress{System.Double},System.Threading.CancellationToken,System.Int32)">
            <summary>
            Downloads a closed caption track to file
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.DownloadClosedCaptionTrackAsync(YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo,System.String,System.IProgress{System.Double},System.Threading.CancellationToken)">
            <summary>
            Downloads a closed caption track to file
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.DownloadClosedCaptionTrackAsync(YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo,System.String,System.IProgress{System.Double})">
            <summary>
            Downloads a closed caption track to file
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.DownloadClosedCaptionTrackAsync(YoutubeExplode.Models.ClosedCaptions.ClosedCaptionTrackInfo,System.String)">
            <summary>
            Downloads a closed caption track to file
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.ValidateVideoId(System.String)">
            <summary>
            Verifies that the given string is syntactically a valid Youtube video ID
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.TryParseVideoId(System.String,System.String@)">
            <summary>
            Tries to parse video ID from a Youtube video URL
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.ParseVideoId(System.String)">
            <summary>
            Parses video ID from a Youtube video URL
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.ValidatePlaylistId(System.String)">
            <summary>
            Verifies that the given string is syntactically a valid Youtube playlist ID
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.TryParsePlaylistId(System.String,System.String@)">
            <summary>
            Tries to parse playlist ID from a Youtube playlist URL
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.ParsePlaylistId(System.String)">
            <summary>
            Parses playlist ID from a Youtube playlist URL
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.ValidateChannelId(System.String)">
            <summary>
            Verifies that the given string is syntactically a valid Youtube channel ID
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.TryParseChannelId(System.String,System.String@)">
            <summary>
            Tries to parse channel ID from a Youtube channel URL
            </summary>
        </member>
        <member name="M:YoutubeExplode.YoutubeClient.ParseChannelId(System.String)">
            <summary>
            Parses channel ID from a Youtube channel URL
            </summary>
        </member>
    </members>
</doc>
